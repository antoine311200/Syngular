import itertools
from syngular.core import Model, Output
from syngular.core import Linear
from syngular.tensor import MatrixProductState, MatrixProductOperator

import numpy as np

w = np.arange(4**6).reshape(4,4,4,4,4,4).astype('float64') / 1.6e5
W = MatrixProductOperator(w, bond_shape=(4,4,))
W.decompose()

model = Model([
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    Linear(4**3,4**3,core=3, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,4,core=4, bond=4, weights_initializer=W),
    # Linear(4,8,core=4,bond=4),
    Output((4**3,))
])
model.build()

print("---")
print(model.draw())
print("---")
print("\n")
print(model.describe())

x = np.arange(4**3).reshape(4,4,4)
X = MatrixProductState(x, bond_shape=(4,4,)).decompose()

y = model.predict(X)
print(y)

w_ = w.reshape((4**3,4**3))
print(x.reshape((4**3,)) @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_ @ w_)
